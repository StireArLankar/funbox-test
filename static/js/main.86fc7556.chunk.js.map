{"version":3,"sources":["components/article/cat.png","components/article/index.js","components/products/index.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Article","state","hover","articleRef","React","createRef","onMouseEnter","evt","_this","props","data","disabled","setState","current","classList","add","onMouseLeave","remove","onClick","onSelectionChange","id","toggle","renderList","list","map","item","index","it","split","substr","isNaN","react_default","a","createElement","className","key","renderTagline","text","selected","renderAfterline","_this$props$data","afterline","react","tabIndex","_this$props$data2","this","title","amount","about","temp","concat","ref","main","sub","alt","src","cat","count","unit","Component","require","polyfill","Products","Object","toConsumableArray","article","_this2","fetch","process","then","blob","json","objectSpread","Boolean","window","location","hostname","match","ReactDOM","render","products","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2SC0FzBC,oNArFbC,MAAQ,CACNC,OAAO,KAGTC,WAAaC,IAAMC,cAEnBC,aAAe,SAAAC,GACTC,EAAKC,MAAMC,KAAKC,WACpBH,EAAKI,SAAS,CAAEV,OAAO,IACvBM,EAAKL,WAAWU,QAAQC,UAAUC,IAAI,+BAGxCC,aAAe,SAAAT,GACTC,EAAKC,MAAMC,KAAKC,WACpBH,EAAKI,SAAS,CAAEV,OAAO,IACvBM,EAAKL,WAAWU,QAAQC,UAAUG,OAAO,+BAG3CC,QAAU,SAAAX,GACJC,EAAKC,MAAMC,KAAKC,WACpBH,EAAKI,SAAS,CAAEV,OAAO,IACvBM,EAAKC,MAAMU,kBAAkBX,EAAKC,MAAMC,KAAKU,IAC7CZ,EAAKL,WAAWU,QAAQC,UAAUO,OAAO,8BACzCb,EAAKL,WAAWU,QAAQC,UAAUG,OAAO,+BAG3CK,WAAa,SAAAC,GACX,OAAOA,EAAKC,IAAI,SAACC,EAAMC,GACrB,IAAMC,EAAKF,EAAKG,MAAM,KAAKJ,IAAI,SAACK,EAAQH,GACtC,OAAOI,OAAOD,GAAUA,EAAS,IAAME,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OAAOC,IAAKT,GAAQG,EAApC,OAEzC,OAAOE,EAAAC,EAAAC,cAAA,MAAIE,IAAKT,EAAOQ,UAAU,sBAAsBP,QAI3DS,cAAgB,WAAM,IACZlC,EAAUM,EAAKP,MAAfC,MAEFmC,EADe7B,EAAKC,MAAMC,KAAxB4B,UACiBpC,EAAQ,0FAAsB,+IACvD,OAAO6B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAoBG,MAG1CE,gBAAkB,WAAM,IAAAC,EACUhC,EAAKC,MAAMC,KAAnC+B,EADcD,EACdC,UACR,OAFsBD,EACH7B,SACE8B,EAAU9B,SACVH,EAAKC,MAAMC,KAAxB4B,SACUG,EAAUH,SAAWP,EAAAC,EAAAC,cAACS,EAAA,SAAD,4IAAsCX,EAAAC,EAAAC,cAAA,QAAMU,SAAS,IAAIT,UAAU,0BAA0BhB,QAASV,EAAKU,SAArE,4BAAtC,8EAGhC,IAAA0B,EACoCC,KAAKpC,MAAMC,KAA9CoC,EADDF,EACCE,MAAOC,EADRH,EACQG,OAAQC,EADhBJ,EACgBI,MACjBC,EAFCL,EACuBjC,SACT,gCAErB,OACEoB,EAAAC,EAAAC,cAAA,WACEC,UAAS,oBAAAgB,OAAsBD,GAC/BE,IAAKN,KAAK1C,YAEV4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACb5B,aAAcuC,KAAKvC,aACnBU,aAAc6B,KAAK7B,aACnBE,QAAS2B,KAAK3B,SAEda,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZW,KAAKT,gBACNL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBY,EAAMM,MACtCrB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAqBY,EAAMO,KACxCtB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBW,KAAKvB,WAAW0B,KAEjDjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OAAKqB,IAAI,qBAAMC,IAAKC,IAAKtB,UAAU,mBAGvCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAAyBa,EAAOU,OAChD1B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBa,EAAOW,QAGnD3B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBW,KAAKN,2BAhF1BoB,oBCCtBC,EAAQ,IAAeC,eA+CRC,6MA5Cb7D,MAAQ,CACNS,KAAM,MAkBRS,kBAAoB,SAACO,GACnB,IAAMhB,EAAIqD,OAAAC,EAAA,EAAAD,CAAOvD,EAAKP,MAAMS,MAC5BA,EAAKgB,GAAOY,UAAY5B,EAAKgB,GAAOY,SACpC9B,EAAKI,SAAS,CAACF,KAAMA,OAGvBY,WAAa,WAEX,OADWyC,OAAAC,EAAA,EAAAD,CAAOvD,EAAKP,MAAMS,MAChBc,IAAI,SAACC,EAAMC,GAAP,OACfK,EAAAC,EAAAC,cAAA,MAAIE,IAAKT,EAAOQ,UAAU,kBACxBH,EAAAC,EAAAC,cAACgC,EAAD,CAASvD,KAAMe,EAAMN,kBAAmBX,EAAKW,4GAzB9B,IAAA+C,EAAArB,KAEnBsB,IADYC,0BAETC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAA3D,GAIJ,OAHaqD,OAAAC,EAAA,EAAAD,CAAIrD,GAAMc,IAAI,SAACC,EAAMC,GAChC,OAAOqC,OAAAS,EAAA,EAAAT,CAAA,CAAEzB,UAAU,EAAOlB,GAAIM,GAAUD,OAI3C4C,KAAK,SAAA3D,GACJwD,EAAKtD,SAAS,CAAEF,KAAKqD,OAAAC,EAAA,EAAAD,CAAKrD,wCAoB9B,OACEqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,sIACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBW,KAAKvB,sBAvCtBqC,aCKHc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAAcC,SAASC,eAAe,SD2HhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhB,KAAK,SAAAiB,GACjCA,EAAaC","file":"static/js/main.86fc7556.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.5506e1b7.png\";","import React, { Component, Fragment } from 'react';\r\nimport cat from './cat.png';\r\nimport './style.scss';\r\n\r\nclass Article extends Component {\r\n  state = {\r\n    hover: false\r\n  };\r\n\r\n  articleRef = React.createRef();\r\n\r\n  onMouseEnter = evt => {\r\n    if (this.props.data.disabled) return;\r\n    this.setState({ hover: true });\r\n    this.articleRef.current.classList.add('article__wrapper--hover');\r\n  };\r\n\r\n  onMouseLeave = evt => {\r\n    if (this.props.data.disabled) return;\r\n    this.setState({ hover: false });\r\n    this.articleRef.current.classList.remove('article__wrapper--hover');\r\n  };\r\n\r\n  onClick = evt => {\r\n    if (this.props.data.disabled) return;\r\n    this.setState({ hover: false});\r\n    this.props.onSelectionChange(this.props.data.id);\r\n    this.articleRef.current.classList.toggle('article__wrapper--selected');\r\n    this.articleRef.current.classList.remove('article__wrapper--hover');\r\n  };\r\n\r\n  renderList = list => {\r\n    return list.map((item, index) => {\r\n      const it = item.split(' ').map((substr, index) => {\r\n        return isNaN(+substr) ? substr + ' ' : <span className='bold' key={index}>{substr} </span>\r\n      });\r\n      return <li key={index} className=\"article__list-item\">{it}</li>\r\n    });\r\n  };\r\n\r\n  renderTagline = () => {\r\n    const { hover } = this.state;\r\n    const { selected } = this.props.data;\r\n    const text = selected && hover ? 'Котэ не одобряет?' : 'Сказочное заморское яство';\r\n    return <p className='article__tagline'>{text}</p>\r\n  }\r\n\r\n  renderAfterline = () => {\r\n    const { afterline, disabled } = this.props.data;\r\n    if (disabled) return afterline.disabled;\r\n    const { selected } = this.props.data;\r\n    return selected ? afterline.selected : <Fragment>Чего сидишь, порадуй котэ, {<span tabIndex='0' className='article__afterline-link' onClick={this.onClick}>купи</span>}.</Fragment>\r\n  }\r\n\r\n  render() {\r\n    const { title, amount, about, disabled } = this.props.data;\r\n    const temp = disabled ? `article__wrapper--disabled` : ``;\r\n\r\n    return (\r\n      <article\r\n        className={`article__wrapper ${temp}`}\r\n        ref={this.articleRef}\r\n      >\r\n        <div className=\"article__content\"\r\n          onMouseEnter={this.onMouseEnter}\r\n          onMouseLeave={this.onMouseLeave}\r\n          onClick={this.onClick}\r\n        >\r\n          <div className=\"article__background\">\r\n            <div className=\"article__description\">\r\n              {this.renderTagline()}\r\n              <h3 className=\"article__title\">{title.main}</h3>\r\n              <b className=\"article__subtitle\">{title.sub}</b>\r\n              <ul className=\"article__list\">{this.renderList(about)}</ul>\r\n            </div>\r\n            <div className=\"article__img-wrapper\">\r\n              <img alt=\"кот\" src={cat} className=\"article__img\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"article__amount\">\r\n            <span className=\"article__amount-count\">{amount.count}</span>\r\n            <span className=\"article__amount-unit\">{amount.unit}</span>\r\n          </div>\r\n        </div>\r\n        <p className=\"article__afterline\">{this.renderAfterline()}</p>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Article;\r\n","import React, { Component } from 'react';\r\nimport fetch from 'isomorphic-fetch';\r\nimport Article from '../article';\r\nimport './style.scss';\r\n\r\nrequire('es6-promise').polyfill(); // ie11\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    data: []\r\n  };\r\n\r\n  componentWillMount() {\r\n    const url = process.env.PUBLIC_URL + '/data.json';\r\n    fetch(url)\r\n      .then(blob => blob.json())\r\n      .then(data => {\r\n        const temp = [...data].map((item, index) => {\r\n          return { selected: false, id: index, ...item };\r\n        });\r\n        return temp;\r\n      })\r\n      .then(data => {\r\n        this.setState({ data: [...data] });\r\n      });\r\n  }\r\n\r\n  onSelectionChange = (index) => {\r\n    const data = [...this.state.data];\r\n    data[index].selected = !data[index].selected;\r\n    this.setState({data: data})\r\n  }\r\n\r\n  renderList = () => {\r\n    const array = [...this.state.data];\r\n    return array.map((item, index) => (\r\n      <li key={index} className=\"products__item\">\r\n        <Article data={item} onSelectionChange={this.onSelectionChange}/>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"products__wrapper\">\r\n        <h2 className=\"products__title\">Ты сегодня покормил кота?</h2>\r\n        <ul className=\"products__list\">{this.renderList()}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Products from './components/products';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Products />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}